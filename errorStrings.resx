<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addAlbumFailure" xml:space="preserve">
    <value>PhotoBomber failed to create the album, will now try to recover the library.</value>
    <comment>used when adding an album fails and no more info can be provided or is not advisable.</comment>
  </data>
  <data name="addImageFailure" xml:space="preserve">
    <value>PhotoBomber failed to import the Image(s).</value>
    <comment>used when adding an image fails and no more info can be provided or is not advisable.</comment>
  </data>
  <data name="addImageWarning" xml:space="preserve">
    <value>Warning! Unable to add all images.</value>
    <comment>used when addNewPictures returns a warning status</comment>
  </data>
  <data name="changeCommentFailure" xml:space="preserve">
    <value>Failed to change caption on picture.</value>
  </data>
  <data name="copyToClipboardFailure" xml:space="preserve">
    <value>Failed to copy items to clipboard.</value>
    <comment>used when sendAllPhotosInAlbumToClipboard function returns a error status</comment>
  </data>
  <data name="copyToClipboardWarning" xml:space="preserve">
    <value>Warning! Some items could not be copied to clipboard.</value>
    <comment>used when sendAllPhotosInAlbumToClipboard function returns a warning status</comment>
  </data>
  <data name="deleteAlbumFailure" xml:space="preserve">
    <value>Failed to delete album, will now try to recover the library.</value>
    <comment>used when removeAlbum function returns a failure staus</comment>
  </data>
  <data name="deletePhotoFailure" xml:space="preserve">
    <value>Failed to delete the photo.</value>
    <comment>used when removePictureFromAlbum returns a failure status</comment>
  </data>
  <data name="failedToPasteImages" xml:space="preserve">
    <value>PhotoBomber failed to copythe Image(s). AHHHHHHHHHHHHHH!!!!!!!!!!!!!!!!!!!!!!!!</value>
  </data>
  <data name="getPhotosFailure" xml:space="preserve">
    <value>Failed to retrieve pictures in the album.</value>
    <comment>used when getAllPhotosInAlbum returns a failure status</comment>
  </data>
  <data name="getPhotosWarning" xml:space="preserve">
    <value>Warning! Some pictures could not be retrieved.</value>
    <comment>used when getAllPhotosInAlbum returns a warning status</comment>
  </data>
  <data name="invalidAlbumNameCharacter" xml:space="preserve">
    <value>Album names can only contain letters, numbers and spaces.</value>
    <comment>used when album name has invalid characters</comment>
  </data>
  <data name="invalidAlbumNameUnique" xml:space="preserve">
    <value>An album with this name already exists.</value>
    <comment>used when album name is not unique</comment>
  </data>
  <data name="invalidComment" xml:space="preserve">
    <value>Comments can only contain letters, numbers, spaces, and must be no longer than 140 characters.</value>
    <comment>used when the comment does not validate.</comment>
  </data>
  <data name="invalidImageNameCharacter" xml:space="preserve">
    <value>Image names can only contain letters, numbers and spaces.</value>
    <comment>used when imagename has invalid characters</comment>
  </data>
  <data name="invalidImageNameUnique" xml:space="preserve">
    <value>An image in this album already has this name.</value>
    <comment>used when imagename is not unique</comment>
  </data>
  <data name="invalidNameCharacter" xml:space="preserve">
    <value>Names can only contain letters, numbers, spaces, and must have at least one letter or number.</value>
    <comment>used when guiValidateNames function does not validate.</comment>
  </data>
  <data name="rebuildBackendFailure" xml:space="preserve">
    <value>Failed to rebuild and/or recover the database. We're sorry :'(</value>
    <comment>used when the rebuildBackend function returns an error status.</comment>
  </data>
  <data name="renameAlbumFailure" xml:space="preserve">
    <value>Failed to rename the album.</value>
    <comment>used when renameAlbum returns a failure status</comment>
  </data>
  <data name="renamePhotoFailure" xml:space="preserve">
    <value>Failed to rename the picture.</value>
    <comment>used when renamePhoto returns a failure status</comment>
  </data>
  <data name="retrieveAlbumsFailure" xml:space="preserve">
    <value>Failed to retrieve any albums.</value>
    <comment>used when getAllAlbums function returns an error status.</comment>
  </data>
  <data name="retrieveAlbumsWarning" xml:space="preserve">
    <value>Warning! Some albums could not be retrieved.</value>
    <comment>used when getAll Albums function returns a warning status.</comment>
  </data>
  <data name="stopImportFailure" xml:space="preserve">
    <value>Failed to stop picture import. Just let it try to finish to ensure the library doesn't become corrupted!</value>
    <comment>used when the import pictures thread cannot be cancelled.</comment>
  </data>
</root>